// <auto-generated />
using System;
using EmployeesManagement.Data.Persistance;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Employees.Management.Data.Migrations
{
    [DbContext(typeof(EmployeesDataContext))]
    [Migration("20180929144030_initialmigration")]
    partial class initialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate");

                    b.Property<DateTime>("DateTimeCreated");

                    b.Property<DateTime?>("DateTimeLastUpdated");

                    b.Property<byte[]>("EmployeeImage");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(250);

                    b.Property<int>("EmployeeTypeId");

                    b.Property<DateTime>("EmploymentDate");

                    b.Property<int>("GenderId");

                    b.Property<int?>("ManagerId");

                    b.Property<int>("NationalityId");

                    b.Property<DateTime?>("ResignDate");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeTypeId");

                    b.HasIndex("GenderId");

                    b.HasIndex("ManagerId");

                    b.HasIndex("NationalityId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.EmployeePosition", b =>
                {
                    b.Property<int>("EmployeeId");

                    b.Property<int>("PositionId");

                    b.Property<DateTime>("DateTimeCreated");

                    b.Property<DateTime?>("DateTimeLastUpdated");

                    b.HasKey("EmployeeId", "PositionId");

                    b.HasIndex("PositionId");

                    b.ToTable("EmployeesPositions");
                });

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.Lookups.EmployeeType", b =>
                {
                    b.Property<int>("EmployeeTypeId");

                    b.Property<string>("EmployeeTypeAName");

                    b.Property<string>("EmployeeTypeEName");

                    b.HasKey("EmployeeTypeId");

                    b.ToTable("EmployeeTypes");
                });

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.Lookups.Gender", b =>
                {
                    b.Property<int>("GenderId");

                    b.Property<string>("GenderAName")
                        .HasMaxLength(100);

                    b.Property<string>("GenderEName")
                        .HasMaxLength(100);

                    b.HasKey("GenderId");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.Lookups.Nationality", b =>
                {
                    b.Property<int>("NationalityId");

                    b.Property<string>("NationalityAName");

                    b.Property<string>("NationalityEName");

                    b.HasKey("NationalityId");

                    b.ToTable("Nationalities");
                });

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.Lookups.SalaryComponentType", b =>
                {
                    b.Property<int>("SalaryComponentTypeId");

                    b.Property<decimal>("MaxSalaryComponentValue");

                    b.Property<decimal>("MinSalaryComponentValue");

                    b.Property<string>("SalaryComponentTypeAName")
                        .HasMaxLength(200);

                    b.Property<string>("SalaryComponentTypeEName")
                        .HasMaxLength(200);

                    b.HasKey("SalaryComponentTypeId");

                    b.ToTable("SalaryComponentTypes");
                });

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeCreated");

                    b.Property<DateTime?>("DateTimeLastUpdated");

                    b.Property<decimal?>("MaxSalary");

                    b.Property<decimal?>("MinSalary");

                    b.Property<string>("PositionAName");

                    b.Property<string>("PositionEName");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.SalaryComponent", b =>
                {
                    b.Property<int>("SalaryComponentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTimeCreated");

                    b.Property<DateTime?>("DateTimeLastUpdated");

                    b.Property<int>("EmployeeId");

                    b.Property<int>("PositionId");

                    b.Property<int>("SalaryComponentTypeId");

                    b.Property<decimal>("SalaryComponentValue");

                    b.HasKey("SalaryComponentId");

                    b.HasIndex("SalaryComponentTypeId");

                    b.HasIndex("PositionId", "EmployeeId");

                    b.ToTable("SalaryComponents");
                });

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.Employee", b =>
                {
                    b.HasOne("EmployeesManagement.Models.DataModels.Lookups.EmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmployeesManagement.Models.DataModels.Lookups.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmployeesManagement.Models.DataModels.Employee", "Manager")
                        .WithMany("SubOrdinates")
                        .HasForeignKey("ManagerId");

                    b.HasOne("EmployeesManagement.Models.DataModels.Lookups.Nationality", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.EmployeePosition", b =>
                {
                    b.HasOne("EmployeesManagement.Models.DataModels.Employee", "Employee")
                        .WithMany("EmployeePositions")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmployeesManagement.Models.DataModels.Position", "Position")
                        .WithMany("EmployeePositions")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EmployeesManagement.Models.DataModels.SalaryComponent", b =>
                {
                    b.HasOne("EmployeesManagement.Models.DataModels.Lookups.SalaryComponentType", "SalaryComponentType")
                        .WithMany()
                        .HasForeignKey("SalaryComponentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EmployeesManagement.Models.DataModels.EmployeePosition", "EmployeePosition")
                        .WithMany("SalaryComponents")
                        .HasForeignKey("PositionId", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
